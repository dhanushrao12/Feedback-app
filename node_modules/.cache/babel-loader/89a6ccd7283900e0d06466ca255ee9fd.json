{"ast":null,"code":"import _slicedToArray from \"/Users/dhanush/Desktop/Work/React/feedback-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { isCubicBezier } from '@motionone/utils';\n\nvar convertEasing = function convertEasing(easing) {\n  return isCubicBezier(easing) ? cubicBezierAsString(easing) : easing;\n};\n\nvar cubicBezierAsString = function cubicBezierAsString(_ref) {\n  var _ref2 = _slicedToArray(_ref, 4),\n      a = _ref2[0],\n      b = _ref2[1],\n      c = _ref2[2],\n      d = _ref2[3];\n\n  return \"cubic-bezier(\".concat(a, \", \").concat(b, \", \").concat(c, \", \").concat(d, \")\");\n};\n\nexport { convertEasing, cubicBezierAsString };","map":{"version":3,"names":["isCubicBezier","convertEasing","easing","cubicBezierAsString","a","b","c","d"],"sources":["/Users/dhanush/Desktop/Work/React/feedback-app/node_modules/@motionone/dom/dist/animate/utils/easing.es.js"],"sourcesContent":["import { isCubicBezier } from '@motionone/utils';\n\nconst convertEasing = (easing) => isCubicBezier(easing) ? cubicBezierAsString(easing) : easing;\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\n\nexport { convertEasing, cubicBezierAsString };\n"],"mappings":";AAAA,SAASA,aAAT,QAA8B,kBAA9B;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,MAAD;EAAA,OAAYF,aAAa,CAACE,MAAD,CAAb,GAAwBC,mBAAmB,CAACD,MAAD,CAA3C,GAAsDA,MAAlE;AAAA,CAAtB;;AACA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB;EAAA;EAAA,IAAEC,CAAF;EAAA,IAAKC,CAAL;EAAA,IAAQC,CAAR;EAAA,IAAWC,CAAX;;EAAA,8BAAkCH,CAAlC,eAAwCC,CAAxC,eAA8CC,CAA9C,eAAoDC,CAApD;AAAA,CAA5B;;AAEA,SAASN,aAAT,EAAwBE,mBAAxB"},"metadata":{},"sourceType":"module"}