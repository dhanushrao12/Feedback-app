{"ast":null,"code":"import _toConsumableArray from \"/Users/dhanush/Desktop/Work/React/feedback-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport { cubicBezier, steps } from '@motionone/easing';\nimport { noopReturn, isEasingList, wrap } from '@motionone/utils';\nvar namedEasings = {\n  ease: cubicBezier(0.25, 0.1, 0.25, 1.0),\n  \"ease-in\": cubicBezier(0.42, 0.0, 1.0, 1.0),\n  \"ease-in-out\": cubicBezier(0.42, 0.0, 0.58, 1.0),\n  \"ease-out\": cubicBezier(0.0, 0.0, 0.58, 1.0)\n};\nvar functionArgsRegex = /\\((.*?)\\)/;\n\nfunction getEasingFunction(definition) {\n  // If already an easing function, return\n  if (typeof definition === \"function\") return definition; // If an easing curve definition, return bezier function\n\n  if (Array.isArray(definition)) return cubicBezier.apply(void 0, _toConsumableArray(definition)); // If we have a predefined easing function, return\n\n  if (namedEasings[definition]) return namedEasings[definition]; // If this is a steps function, attempt to create easing curve\n\n  if (definition.startsWith(\"steps\")) {\n    var args = functionArgsRegex.exec(definition);\n\n    if (args) {\n      var argsArray = args[1].split(\",\");\n      return steps(parseFloat(argsArray[0]), argsArray[1].trim());\n    }\n  }\n\n  return noopReturn;\n}\n\nfunction getEasingForSegment(easing, i) {\n  return isEasingList(easing) ? easing[wrap(0, easing.length, i)] : easing;\n}\n\nexport { getEasingForSegment, getEasingFunction };","map":{"version":3,"names":["cubicBezier","steps","noopReturn","isEasingList","wrap","namedEasings","ease","functionArgsRegex","getEasingFunction","definition","Array","isArray","startsWith","args","exec","argsArray","split","parseFloat","trim","getEasingForSegment","easing","i","length"],"sources":["/Users/dhanush/Desktop/Work/React/feedback-app/node_modules/@motionone/animation/dist/utils/easing.es.js"],"sourcesContent":["import { cubicBezier, steps } from '@motionone/easing';\nimport { noopReturn, isEasingList, wrap } from '@motionone/utils';\n\nconst namedEasings = {\n    ease: cubicBezier(0.25, 0.1, 0.25, 1.0),\n    \"ease-in\": cubicBezier(0.42, 0.0, 1.0, 1.0),\n    \"ease-in-out\": cubicBezier(0.42, 0.0, 0.58, 1.0),\n    \"ease-out\": cubicBezier(0.0, 0.0, 0.58, 1.0),\n};\nconst functionArgsRegex = /\\((.*?)\\)/;\nfunction getEasingFunction(definition) {\n    // If already an easing function, return\n    if (typeof definition === \"function\")\n        return definition;\n    // If an easing curve definition, return bezier function\n    if (Array.isArray(definition))\n        return cubicBezier(...definition);\n    // If we have a predefined easing function, return\n    if (namedEasings[definition])\n        return namedEasings[definition];\n    // If this is a steps function, attempt to create easing curve\n    if (definition.startsWith(\"steps\")) {\n        const args = functionArgsRegex.exec(definition);\n        if (args) {\n            const argsArray = args[1].split(\",\");\n            return steps(parseFloat(argsArray[0]), argsArray[1].trim());\n        }\n    }\n    return noopReturn;\n}\nfunction getEasingForSegment(easing, i) {\n    return isEasingList(easing)\n        ? easing[wrap(0, easing.length, i)]\n        : easing;\n}\n\nexport { getEasingForSegment, getEasingFunction };\n"],"mappings":";AAAA,SAASA,WAAT,EAAsBC,KAAtB,QAAmC,mBAAnC;AACA,SAASC,UAAT,EAAqBC,YAArB,EAAmCC,IAAnC,QAA+C,kBAA/C;AAEA,IAAMC,YAAY,GAAG;EACjBC,IAAI,EAAEN,WAAW,CAAC,IAAD,EAAO,GAAP,EAAY,IAAZ,EAAkB,GAAlB,CADA;EAEjB,WAAWA,WAAW,CAAC,IAAD,EAAO,GAAP,EAAY,GAAZ,EAAiB,GAAjB,CAFL;EAGjB,eAAeA,WAAW,CAAC,IAAD,EAAO,GAAP,EAAY,IAAZ,EAAkB,GAAlB,CAHT;EAIjB,YAAYA,WAAW,CAAC,GAAD,EAAM,GAAN,EAAW,IAAX,EAAiB,GAAjB;AAJN,CAArB;AAMA,IAAMO,iBAAiB,GAAG,WAA1B;;AACA,SAASC,iBAAT,CAA2BC,UAA3B,EAAuC;EACnC;EACA,IAAI,OAAOA,UAAP,KAAsB,UAA1B,EACI,OAAOA,UAAP,CAH+B,CAInC;;EACA,IAAIC,KAAK,CAACC,OAAN,CAAcF,UAAd,CAAJ,EACI,OAAOT,WAAW,MAAX,4BAAeS,UAAf,EAAP,CAN+B,CAOnC;;EACA,IAAIJ,YAAY,CAACI,UAAD,CAAhB,EACI,OAAOJ,YAAY,CAACI,UAAD,CAAnB,CAT+B,CAUnC;;EACA,IAAIA,UAAU,CAACG,UAAX,CAAsB,OAAtB,CAAJ,EAAoC;IAChC,IAAMC,IAAI,GAAGN,iBAAiB,CAACO,IAAlB,CAAuBL,UAAvB,CAAb;;IACA,IAAII,IAAJ,EAAU;MACN,IAAME,SAAS,GAAGF,IAAI,CAAC,CAAD,CAAJ,CAAQG,KAAR,CAAc,GAAd,CAAlB;MACA,OAAOf,KAAK,CAACgB,UAAU,CAACF,SAAS,CAAC,CAAD,CAAV,CAAX,EAA2BA,SAAS,CAAC,CAAD,CAAT,CAAaG,IAAb,EAA3B,CAAZ;IACH;EACJ;;EACD,OAAOhB,UAAP;AACH;;AACD,SAASiB,mBAAT,CAA6BC,MAA7B,EAAqCC,CAArC,EAAwC;EACpC,OAAOlB,YAAY,CAACiB,MAAD,CAAZ,GACDA,MAAM,CAAChB,IAAI,CAAC,CAAD,EAAIgB,MAAM,CAACE,MAAX,EAAmBD,CAAnB,CAAL,CADL,GAEDD,MAFN;AAGH;;AAED,SAASD,mBAAT,EAA8BX,iBAA9B"},"metadata":{},"sourceType":"module"}