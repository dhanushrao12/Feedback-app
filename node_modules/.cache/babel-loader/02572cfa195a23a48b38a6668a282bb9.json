{"ast":null,"code":"import { defaults, noop, time } from '@motionone/utils';\nimport { stopAnimation } from './stop-animation.es.js';\n\nvar createAnimation = function createAnimation(factory) {\n  return factory();\n};\n\nvar wrapAnimationWithControls = function wrapAnimationWithControls(animationFactory) {\n  var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaults.duration;\n  return new Proxy({\n    animations: animationFactory.map(createAnimation).filter(Boolean),\n    duration: duration\n  }, controls);\n};\n/**\n * TODO:\n * Currently this returns the first animation, ideally it would return\n * the first active animation.\n */\n\n\nvar getActiveAnimation = function getActiveAnimation(state) {\n  return state.animations[0];\n};\n\nvar controls = {\n  get: function get(target, key) {\n    var activeAnimation = getActiveAnimation(target);\n\n    switch (key) {\n      case \"duration\":\n        return target.duration;\n\n      case \"currentTime\":\n        var _time = (activeAnimation === null || activeAnimation === void 0 ? void 0 : activeAnimation[key]) || 0;\n\n        return _time ? _time / 1000 : 0;\n\n      case \"playbackRate\":\n      case \"playState\":\n        return activeAnimation === null || activeAnimation === void 0 ? void 0 : activeAnimation[key];\n\n      case \"finished\":\n        if (!target.finished) {\n          target.finished = Promise.all(target.animations.map(selectFinished)).catch(noop);\n        }\n\n        return target.finished;\n\n      case \"stop\":\n        return function () {\n          return target.animations.forEach(function (animation) {\n            return stopAnimation(animation);\n          });\n        };\n\n      default:\n        return typeof (activeAnimation === null || activeAnimation === void 0 ? void 0 : activeAnimation[key]) === \"undefined\" ? undefined : function () {\n          return target.animations.forEach(function (animation) {\n            return animation[key]();\n          });\n        };\n    }\n  },\n  set: function set(target, key, value) {\n    switch (key) {\n      case \"currentTime\":\n        value = time.ms(value);\n\n      case \"currentTime\":\n      case \"playbackRate\":\n        for (var i = 0; i < target.animations.length; i++) {\n          target.animations[i][key] = value;\n        }\n\n        return true;\n    }\n\n    return false;\n  }\n};\n\nvar selectFinished = function selectFinished(animation) {\n  return animation.finished;\n};\n\nexport { controls, wrapAnimationWithControls };","map":{"version":3,"names":["defaults","noop","time","stopAnimation","createAnimation","factory","wrapAnimationWithControls","animationFactory","duration","Proxy","animations","map","filter","Boolean","controls","getActiveAnimation","state","get","target","key","activeAnimation","finished","Promise","all","selectFinished","catch","forEach","animation","undefined","set","value","ms","i","length"],"sources":["/Users/dhanush/Desktop/Work/React/feedback-app/node_modules/@motionone/dom/dist/animate/utils/controls.es.js"],"sourcesContent":["import { defaults, noop, time } from '@motionone/utils';\nimport { stopAnimation } from './stop-animation.es.js';\n\nconst createAnimation = (factory) => factory();\nconst wrapAnimationWithControls = (animationFactory, duration = defaults.duration) => new Proxy({\n    animations: animationFactory.map(createAnimation).filter(Boolean),\n    duration,\n}, controls);\n/**\n * TODO:\n * Currently this returns the first animation, ideally it would return\n * the first active animation.\n */\nconst getActiveAnimation = (state) => state.animations[0];\nconst controls = {\n    get: (target, key) => {\n        const activeAnimation = getActiveAnimation(target);\n        switch (key) {\n            case \"duration\":\n                return target.duration;\n            case \"currentTime\":\n                let time = (activeAnimation === null || activeAnimation === void 0 ? void 0 : activeAnimation[key]) || 0;\n                return time ? time / 1000 : 0;\n            case \"playbackRate\":\n            case \"playState\":\n                return activeAnimation === null || activeAnimation === void 0 ? void 0 : activeAnimation[key];\n            case \"finished\":\n                if (!target.finished) {\n                    target.finished = Promise.all(target.animations.map(selectFinished)).catch(noop);\n                }\n                return target.finished;\n            case \"stop\":\n                return () => target.animations.forEach((animation) => stopAnimation(animation));\n            default:\n                return typeof (activeAnimation === null || activeAnimation === void 0 ? void 0 : activeAnimation[key]) === \"undefined\"\n                    ? undefined\n                    : () => target.animations.forEach((animation) => animation[key]());\n        }\n    },\n    set: (target, key, value) => {\n        switch (key) {\n            case \"currentTime\":\n                value = time.ms(value);\n            case \"currentTime\":\n            case \"playbackRate\":\n                for (let i = 0; i < target.animations.length; i++) {\n                    target.animations[i][key] = value;\n                }\n                return true;\n        }\n        return false;\n    },\n};\nconst selectFinished = (animation) => animation.finished;\n\nexport { controls, wrapAnimationWithControls };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}