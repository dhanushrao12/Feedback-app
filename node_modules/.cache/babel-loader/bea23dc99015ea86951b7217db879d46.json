{"ast":null,"code":"var _jsxFileName = \"/Users/dhanush/Desktop/Work/React/feedback-app/src/components/FeedbackStats.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useContext } from \"react\";\nimport FeedbackContext from \"../context/FeedbackContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FeedbackStats = () => {\n  _s();\n\n  const {\n    feedback\n  } = useContext(FeedbackContext); //calculate average\n\n  let average = feedback.reduce((acc, curr) => {\n    return acc + curr.rating;\n  }, 0) / feedback.length;\n  average = average.toFixed(1).replace(/[.,]0$/, \"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feedback-stats\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [feedback.length, \" Reviews\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Average Rating: \", isNaN(average) ? 0 : average]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FeedbackStats, \"RNPzS9Jfq5OTQN+7+1vdg6m3Kwc=\");\n\n_c = FeedbackStats;\nFeedbackStats.propTypes = {\n  feedback: PropTypes.array.isRequired\n};\nexport default FeedbackStats;\n\nvar _c;\n\n$RefreshReg$(_c, \"FeedbackStats\");","map":{"version":3,"names":["React","useContext","FeedbackContext","FeedbackStats","feedback","average","reduce","acc","curr","rating","length","toFixed","replace","isNaN","propTypes","PropTypes","array","isRequired"],"sources":["/Users/dhanush/Desktop/Work/React/feedback-app/src/components/FeedbackStats.jsx"],"sourcesContent":["import React from \"react\";\nimport { useContext } from \"react\";\nimport FeedbackContext from \"../context/FeedbackContext\";\n\nconst FeedbackStats = () => {\n  const { feedback } = useContext(FeedbackContext);\n\n  //calculate average\n  let average =\n    feedback.reduce((acc, curr) => {\n      return acc + curr.rating;\n    }, 0) / feedback.length;\n  average = average.toFixed(1).replace(/[.,]0$/, \"\");\n  return (\n    <div className=\"feedback-stats\">\n      <h4>{feedback.length} Reviews</h4>\n      <h4>Average Rating: {isNaN(average) ? 0 : average}</h4>\n    </div>\n  );\n};\n\nFeedbackStats.propTypes = {\n  feedback: PropTypes.array.isRequired,\n};\n\nexport default FeedbackStats;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,OAAOC,eAAP,MAA4B,4BAA5B;;;AAEA,MAAMC,aAAa,GAAG,MAAM;EAAA;;EAC1B,MAAM;IAAEC;EAAF,IAAeH,UAAU,CAACC,eAAD,CAA/B,CAD0B,CAG1B;;EACA,IAAIG,OAAO,GACTD,QAAQ,CAACE,MAAT,CAAgB,CAACC,GAAD,EAAMC,IAAN,KAAe;IAC7B,OAAOD,GAAG,GAAGC,IAAI,CAACC,MAAlB;EACD,CAFD,EAEG,CAFH,IAEQL,QAAQ,CAACM,MAHnB;EAIAL,OAAO,GAAGA,OAAO,CAACM,OAAR,CAAgB,CAAhB,EAAmBC,OAAnB,CAA2B,QAA3B,EAAqC,EAArC,CAAV;EACA,oBACE;IAAK,SAAS,EAAC,gBAAf;IAAA,wBACE;MAAA,WAAKR,QAAQ,CAACM,MAAd;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,+BAAqBG,KAAK,CAACR,OAAD,CAAL,GAAiB,CAAjB,GAAqBA,OAA1C;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD,CAfD;;GAAMF,a;;KAAAA,a;AAiBNA,aAAa,CAACW,SAAd,GAA0B;EACxBV,QAAQ,EAAEW,SAAS,CAACC,KAAV,CAAgBC;AADF,CAA1B;AAIA,eAAed,aAAf"},"metadata":{},"sourceType":"module"}